//! Guessing game
//! 
//! 1. Generates pseudo-random number within the 0..100 range
//! 2. Asks user to enter an integer number (guess number).
//! 3. Checks if the number is guessed correctly.
//! 4. If the entered number doen't match to the one generated by the app,
//!     user will be asked to retry;
//! 5. If the entered input is just wrong and cannot be parsed into a number
//!     user will see the explaining message and will be asked to try once more
//! 6. If user enters `quit` - the program will exit.
//! 
//! 


use std::io;
use rand::prelude::*;


fn main() {
    let mut input_buffer = String::with_capacity(10);
    let secret_number = thread_rng().gen_range(1..=100);
    let mut guess: i32;

    loop {
        println!("Please enter your guess:");
        if let Err(e) = io::stdin().read_line(&mut input_buffer) {
            eprintln!("Error occured - could not read from CLI: {}", e);
            continue;
        }
        
        if input_buffer.eq("quit\n") {
            println!("Seems you have no longer will to play :( See ya later!");
            break;
        }

        match input_buffer.trim().parse() {
            Err(_) => {
                println!("Cannot correctly read the number. Wrong input!");
            }
            Ok(guess) => match secret_number.cmp(&guess) {
                std::cmp::Ordering::Less => println!("Too high!"),
                std::cmp::Ordering::Greater => println!("Too low!"),
                _ => {
                    println!("Success !! {}", guess);
                    break;
                }
            }
        }
        input_buffer.clear();
    }
}
